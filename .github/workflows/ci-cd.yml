name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]

jobs:
  # Tests crÃ­ticos de despliegue (solo en develop)
  critical-tests:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Run critical deployment tests
        run: |
          echo "ðŸ§ª Ejecutando tests crÃ­ticos de despliegue..."
          python scripts/deployment/test_deployment.py
          echo "âœ… Tests crÃ­ticos completados"
        env:
          MONGODB_URL: ${{ secrets.MONGODB_URL }}
          MONGODB_DATABASE: ${{ secrets.MONGODB_DATABASE }}
          CLOUDINARY_CLOUD_NAME: ${{ secrets.CLOUDINARY_CLOUD_NAME }}
          CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
          CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}
          BASE_URL: ${{ secrets.STAGING_BASE_URL }}

  # Tests rÃ¡pidos de funcionalidad (solo en develop)
  quick-tests:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Run quick functionality tests
        run: |
          echo "ðŸ§ª Ejecutando tests rÃ¡pidos de funcionalidad..."
          python run_tests.py quick
          echo "âœ… Tests rÃ¡pidos completados"
        env:
          MONGODB_URL: ${{ secrets.MONGODB_URL }}
          MONGODB_DATABASE: ${{ secrets.MONGODB_DATABASE }}
          CLOUDINARY_CLOUD_NAME: ${{ secrets.CLOUDINARY_CLOUD_NAME }}
          CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
          CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}
          BASE_URL: ${{ secrets.STAGING_BASE_URL }}

  # Deploy a staging (solo cuando se hace push a develop)
  deploy-to-staging:
    runs-on: ubuntu-latest
    needs: [critical-tests, quick-tests]
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Install Flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master
        
      - name: Deploy to Fly.io Staging
        run: |
          echo "ðŸš€ Desplegando a staging..."
          flyctl deploy --remote-only
          echo "âœ… Despliegue completado"
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
          MONGODB_URL: ${{ secrets.MONGODB_URL }}
          MONGODB_DATABASE: ${{ secrets.MONGODB_DATABASE }}
          CLOUDINARY_CLOUD_NAME: ${{ secrets.CLOUDINARY_CLOUD_NAME }}
          CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
          CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}
          BASE_URL: ${{ secrets.STAGING_BASE_URL }}

  # Sync to production repository (solo cuando se hace push a main)
  sync-to-production:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
        
      - name: Sync to Production Repository
        run: |
          echo "ðŸ”„ Sincronizando con repositorio de producciÃ³n..."
          chmod +x ./sync-to-production.sh
          ./sync-to-production.sh
          echo "âœ… SincronizaciÃ³n completada"
        env:
          GITHUB_TOKEN: ${{ secrets.PRODUCTION_SYNC_TOKEN }} 